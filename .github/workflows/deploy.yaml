name: Deploy

on:
  workflow_dispatch:
    inputs:
      stage:
        description: "The deployment stage (e.g., Dev-ID, Prod-ID)"
        type: choice
        required: true
        default: "Dev-ID"
        options:
          - Dev-ID
          - Dev-SG
          - Prod-ID
          - Prod-SG

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set deployment parameters based on stage
        id: stages
        run: |
          if [ "${{ github.event.inputs.stage }}" == "Dev-ID" ]; then
            echo "Setting parameters for Dev-ID stage"
            echo "AWS_ACCOUNT_ID=${{ secrets.AWS_ACCOUNT_ID }}" >> $GITHUB_ENV
            echo "AWS_REGION=us-east-1" >> $GITHUB_ENV
            echo "AWS_ROLE_OIDC=${{ secrets.AWS_ROLE_OIDC }}" >> $GITHUB_ENV
            echo "configname=/dev-id/noah/config" >> $GITHUB_OUTPUT
          elif [ "${{ github.event.inputs.stage }}" == "Dev-SG" ]; then
            echo "Setting parameters for Dev-SG stage"
            echo "AWS_ACCOUNT_ID=${{ secrets.AWS_ACCOUNT_ID }}" >> $GITHUB_ENV
            echo "AWS_REGION=us-east-1" >> $GITHUB_ENV
            echo "AWS_ROLE_OIDC=${{ secrets.AWS_ROLE_OIDC }}" >> $GITHUB_ENV
            echo "configname=/dev-sg/noah/config" >> $GITHUB_OUTPUT
          elif [ "${{ github.event.inputs.stage }}" == "Prod-ID" ]; then
            echo "Setting parameters for Prod-ID stage"
            echo "AWS_ACCOUNT_ID=${{ secrets.AWS_ACCOUNT_ID }}" >> $GITHUB_ENV
            echo "AWS_REGION=us-east-1" >> $GITHUB_ENV
            echo "AWS_ROLE_OIDC=${{ secrets.AWS_ROLE_OIDC }}" >> $GITHUB_ENV
            echo "configname=/prod-id/noah/config" >> $GITHUB_OUTPUT
          elif [ "${{ github.event.inputs.stage }}" == "Prod-SG" ]; then
            echo "Setting parameters for Prod-SG stage"
            echo "AWS_ACCOUNT_ID=${{ secrets.AWS_ACCOUNT_ID }}" >> $GITHUB_ENV
            echo "AWS_REGION=us-east-1" >> $GITHUB_ENV
            echo "AWS_ROLE_OIDC=${{ secrets.AWS_ROLE_OIDC }}" >> $GITHUB_ENV
            echo "configname=/prod-sg/noah/config" >> $GITHUB_OUTPUT
          fi

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ env.AWS_ACCOUNT_ID }}:role/${{ env.AWS_ROLE_OIDC }}
          role-session-name: githubactions
          aws-region: ${{ env.AWS_REGION }}

      - name: Download config from AWS Parameter Store
        run: |
          echo "Downloading configuration from AWS Parameter Store..."
          aws ssm get-parameter --name "${{ steps.stages.outputs.configname }}" --with-decryption --query "Parameter.Value" --output text > config.yaml
  
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.23

      - name: Install AWS CDK CLI
        run: npm install -g aws-cdk

      - name: Install dependencies
        run: go mod tidy

      - name: Deploy to ${{ github.event.inputs.stage }}
        run: STAGE=${{ github.event.inputs.stage }} make deploy
